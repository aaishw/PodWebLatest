{"version":3,"sources":["webpack:///./src/app/userpage/user.component.html","webpack:///./src/app/userpage/user.component.ts","webpack:///./src/app/userpage/user.module.ts","webpack:///./src/app/userpage/user.routing.ts"],"names":[],"mappings":"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","file":"userpage-user-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-icon card-header-rose\\\">\\n            <div class=\\\"card-icon\\\">\\n              <i class=\\\"material-icons\\\">perm_identity</i>\\n            </div>\\n            <h4 class=\\\"card-title\\\">Edit User Profile\\n            </h4>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form #userProfileForm=\\\"ngForm\\\" (ngSubmit)=\\\"editUserProfile(userProfileForm.value)\\\" (change)=\\\"mark_changed()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Token</label>\\n                    <input [disabled]=\\\"disableToken\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userToken\\\" [(ngModel)]=\\\"userToken\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\">\\n                    <div *ngIf=\\\"!isNamePresent\\\" class=\\\"help-block\\\" style=\\\"text-align: right;\\\">Name is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Email address</label>\\n                    <input [disabled]=\\\"disableEmailAddress\\\" type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"userEmail\\\" [(ngModel)]=\\\"userEmail\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"bmd-label-floating\\\">Seconday email address</label>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"userSecondaryEmail\\\" [(ngModel)]=\\\"userSecondaryEmail\\\">\\n                    </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userAddress\\\" [(ngModel)]=\\\"userAddress\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">City</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userCity\\\" [(ngModel)]=\\\"userCity\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Country</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userCountry\\\" [(ngModel)]=\\\"userCountry\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"bmd-label-floating\\\">Postal Code</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userPostalCode\\\" [(ngModel)]=\\\"userPostalCode\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <button mat-raised-button type=\\\"submit\\\" (click)=\\\"loadLatestPodcast()\\\" class=\\\"btn btn-rose pull-right\\\">Cancel</button>\\n              <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-rose pull-right\\\">Update Profile</button>\\n              <div class=\\\"clearfix\\\"></div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","import { Component,OnInit,Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http,Headers } from '@angular/http';\nimport swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Global } from '../global';\n\n@Component({\n    selector: 'app-user-cmp',\n    templateUrl: 'user.component.html'\n})\n\nexport class UserComponent implements OnInit {\n\n    userToken: string;\n    userName: string;\n    userEmail: string;\n    userSecondaryEmail: string;\n    userAddress: string;\n    userCity: string;\n    userCountry: string;\n    userPostalCode: string;\n    userObject = null;\n    disableEmailAddress = true;\n    disableToken = true;\n    isNamePresent = true;\n    valuesAltered = false;\n\n    constructor(private http: Http,private router: Router,private spinner:NgxSpinnerService){}\n\n    ngOnInit() {\n        this.spinner.show();\n        let headers = new Headers();\n        headers.append(\"token\",localStorage.getItem(\"token\")); \n        headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\"));\n\n        this.http.get(Global.API_ENDPOINT+'/getUserInfo',{headers: headers}).subscribe((data) => {\n            this.userObject = data.json();\n            this.userObject = this.userObject.data\n            \n            this.userToken = this.userObject.token;\n            this.userName = this.userObject.name;\n            this.userEmail = this.userObject.emailAddress;\n            this.userSecondaryEmail = this.userObject.secondaryEmailAddress;\n            this.userAddress = this.userObject.userAddress;\n            this.userCity = this.userObject.city;\n            this.userCountry = this.userObject.country;\n            this.userPostalCode = this.userObject.postalCode;\n            this.spinner.hide();\n        }, (err) => { \n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"emailAddress\");\n            this.spinner.hide();\n            swal({\n                title: \"Invalid login credentials. Please login again!\",\n                text: \"\",\n                timer: 3000,\n                showConfirmButton: false\n            }).catch(swal.noop)\n            this.router.navigateByUrl('/');\n        })        \n    }\n\n    loadLatestPodcast(){\n        this.router.navigateByUrl('/tables/latestPodcast');\n    }\n\n    editUserProfile(form){\n        if(this.valuesAltered){\n\n            if(form.userName !== undefined && (form.userName).trim().length > 0)\n            {\n                this.isNamePresent= true;\n                form.userName = form.userName.trim();\n                form.userAddress = form.userAddress.trim();\n                form.userCity = form.userCity.trim();\n                form.userCountry = form.userCountry.trim();\n                form.userPostalCode = form.userPostalCode.trim();\n                form.userSecondaryEmail = form.userSecondaryEmail.trim();\n\n                this.spinner.show();\n                let headers = new Headers();\n                headers.append(\"token\",localStorage.getItem(\"token\")); \n                headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\"));\n\n                this.http.post(Global.API_ENDPOINT+'/updateUserDetails', form,{headers: headers}).subscribe((data) => {\n                    this.spinner.hide();\n                    var body = JSON.parse(data.text());\n                    swal({\n                        title: body.status,\n                        text: \"\",\n                        timer: 2000,\n                        showConfirmButton: false\n                    }).catch(swal.noop);\n                }, (err) => { \n                    this.spinner.hide();\n                    var body = JSON.parse(err.text());\n                    swal({\n                        title: body.status,\n                        text: \"\",\n                        timer: 2000,\n                        showConfirmButton: false\n                    }).catch(swal.noop);\n                })\n            }\n            else\n            {\n                this.isNamePresent= false;\n            }\n        }\n        else{\n            this.valuesAltered = false;\n        }\n    }\n\n    mark_changed()\n    {\n        this.valuesAltered = true;\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { UserComponent } from './user.component';\nimport { UserRoutes } from './user.routing';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(UserRoutes),\n        FormsModule,\n        NgxSpinnerModule\n    ],\n    declarations: [UserComponent]\n})\n\nexport class UserModule {}\n","import { Routes } from '@angular/router';\n\nimport { UserComponent } from './user.component';\n\nexport const UserRoutes: Routes = [\n    {\n\n      path: '',\n      children: [ {\n        path: 'pages/user',\n        component: UserComponent\n    }]\n}\n];\n"],"sourceRoot":""}