{"version":3,"file":"music-player.utils.js","sourceRoot":"","sources":["../../src/music-player.utils.ts"],"names":[],"mappings":";;;;AAGA,IAAA;;;IAEE;;;OAGG;;;;;;IACI,6BAAY;;;;;IAAnB,UAAoB,KAAU;QAC5B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC;SACd;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEzC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;gBAC7C,MAAM,CAAC,KAAK,CAAC;aACd;SACF;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAChD,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACjC,MAAM,CAAC,KAAK,CAAC;aACd;SACF;QAED,MAAM,CAAC,IAAI,CAAC;KACb;IAED;;OAEG;;;;;;;IACI,gCAAe;;;;;;IAAtB,UAAuB,KAAiB,EAAE,KAAU;QAClD,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,CAAC,CAAC;aACV;SACF;QACD,MAAM,CAAC,CAAC,CAAC,CAAC;KACX;IACD;;OAEG;;;;;;;IACI,0BAAS;;;;;;IAAhB,UAAiB,KAAiB,EAAE,KAAa;QAC/C,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,CAAC,CAAC;aACV;SACF;QACD,MAAM,CAAC,CAAC,CAAC,CAAC;KACX;IAED;;;OAGG;;;;;;IACI,0BAAS;;;;;IAAhB,UAAiB,CAAM;QACrB,qBAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,qBAAM,IAAI,GAAG;YACX,CAAC,EAAE,CAAC;YACJ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACb,MAAM,CAAC;aACR;YACD,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC3B,CAAC;QACF,IAAI,EAAE,CAAC;KACR;2BArEH;IAsEC,CAAA;AAnED,4BAmEC","sourcesContent":["\ndeclare const soundManager: any;\n\nexport class MusicPlayerUtils {\n\n  /**\n   *\n   * @param track\n   */\n  static IsTrackValid(track: any): boolean {\n    if (typeof track === 'undefined') {\n      console.warn('invalid track data');\n      return false;\n    }\n\n    if (track.url.indexOf('soundcloud') > -1) {\n      // if soundcloud url\n      if (typeof track.url === 'undefined') {\n        console.warn('invalid soundcloud track url');\n        return false;\n      }\n    } else {\n      if (soundManager.canPlayURL(track.url) !== true) {\n        console.warn('invalid song url');\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * getIndexByValue used by this service\n   */\n  static GetIndexByValue(array: Array<any>, value: any): number {\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  /**\n   * To check if value is in array\n   */\n  static IsInArray(array: Array<any>, value: string): number {\n    for (let i = 0; i < array.length; i++) {\n      if (array[i].id === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * asyncLoop\n   * @param o\n   */\n  static AsyncLoop(o: any): void {\n    let i = -1;\n    const loop = () => {\n      i++;\n      if (i === o.length) {\n        o.callback();\n        return;\n      }\n      o.functionToLoop(loop, i);\n    };\n    loop(); // init\n  }\n}\n"]}