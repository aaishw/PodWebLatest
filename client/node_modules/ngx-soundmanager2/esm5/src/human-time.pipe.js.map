{"version":3,"file":"human-time.pipe.js","sourceRoot":"","sources":["../../src/human-time.pipe.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;;;;;;;;IAYlD,iCAAS;;;;IAAT,UAAU,KAAa;QACrB,qBAAM,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QACrC,qBAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAE5C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5C;;;;;;IAKO,2BAAG;;;;;cAAC,CAAS;QACnB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;;;gBAbvD,IAAI,SAAC,EAAC,IAAI,EAAE,WAAW,EAAC;;wBAVzB;;SAWa,aAAa","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n * Decorate time string to minutes:seconds\n * Usage:\n *   timeValue | humanTime\n * Example:\n *   {{ 30000 |  humanTime}}\n *   formats to: 00:30\n */\n@Pipe({name: 'humanTime'})\nexport class HumanTimePipe implements PipeTransform {\n  transform(value: number): string {\n    const min = (value / 1000 / 60) << 0;\n    const sec = Math.round((value / 1000) % 60);\n\n    return this.pad(min) + ':' + this.pad(sec);\n  }\n\n  /**\n   * Pads string with zeros if less than 10\n   */\n  private pad(d: number): string {\n    return (d < 10) ? '0' + d.toString() : d.toString();\n  }\n}\n"]}