{"version":3,"file":"repeat-music.directive.js","sourceRoot":"","sources":["../../src/repeat-music.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAqB,MAAM,eAAe,CAAC;AACvF,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;;IAY1D,8BAAoB,mBAAuC,EACvC;QADA,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,aAAQ,GAAR,QAAQ;KAAgB;;;;IAE5C,uCAAQ;;;IAAR;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE,CAAC;;QAGjB,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,mBAAmB,CAAC,6BAA6B;aACzF,SAAS,CAAC,UAAC,KAAU;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;YACzB,KAAI,CAAC,SAAS,EAAE,CAAC;SAClB,CAAC,CAAC;KACN;;;;IAED,0CAAW;;;IAAX;QACE,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,CAAC;KACnD;;;;;IAKkC,sCAAO;;;;;QACxC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;;;;;;IAMlC,wCAAS;;;;;QACf,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;;;gBAxCrF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;iBAC1B;;;;gBAJQ,kBAAkB;gBADO,UAAU;;;4BAmCzC,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;+BAnCnC;;SAMa,oBAAoB","sourcesContent":["import { Directive, HostListener, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { MusicPlayerService } from './music-player.service';\n\n@Directive({\n  selector: '[repeatMusic]'\n})\nexport class RepeatMusicDirective implements OnInit, OnDestroy {\n\n  repeat: boolean;\n\n  // subscriptions\n  private _musicPlayerRepeatSubscription: any;\n\n  constructor(private _musicPlayerService: MusicPlayerService,\n              private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.repeat = this._musicPlayerService.getRepeatStatus();\n    this.highlight();\n\n    // Subscribe for repeat changes to update bindings\n    this._musicPlayerRepeatSubscription = this._musicPlayerService.musicPlayerRepeatEventEmitter\n      .subscribe((event: any) => {\n        this.repeat = event.data;\n        this.highlight();\n      });\n  }\n\n  ngOnDestroy() {\n    this._musicPlayerRepeatSubscription.unsubscribe();\n  }\n\n  /**\n   * Element click event handler\n   */\n  @HostListener('click', ['$event']) onClick() {\n    this._musicPlayerService.repeatToggle();\n  }\n\n  /**\n   * Change background color of element based on repeat state\n   */\n  private highlight(): void {\n    this._element.nativeElement.style.backgroundColor = this.repeat ? 'green' : 'red';\n  }\n}\n"]}